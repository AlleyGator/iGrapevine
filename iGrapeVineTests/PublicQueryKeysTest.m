//  Copyright (c) 2013 William Cox. All rights reserved.


// Can you tell this was done purely with find&replace?

#import "PublicQueryKeysTest.h"

@implementation PublicQueryKeysTest

- (void)testConstants {
    
     STAssertTrue ( [qkName isEqual:@"name"
     ], @"");STAssertTrue ( [qkRace isEqual:@"race"
     ], @"");STAssertTrue ( [qkGroup isEqual:@"group"
     ], @"");STAssertTrue ( [qkSubgroup isEqual:@"subgroup"
     ], @"");STAssertTrue ( [qkXPEarned isEqual:@"xpearned"
     ], @"");STAssertTrue ( [qkXPUnspent isEqual:@"xpunspent"
     ], @"");STAssertTrue ( [qkNature isEqual:@"nature"
     ], @"");STAssertTrue ( [qkDemeanor isEqual:@"demeanor"
     ], @"");STAssertTrue ( [qkWillpower isEqual:@"willpower"
     ], @"");STAssertTrue ( [qkTempWillpower isEqual:@"tempwillpower"
     ], @"");STAssertTrue ( [qkPhysical isEqual:@"physical"
     ], @"");STAssertTrue ( [qkSocial isEqual:@"social"
     ], @"");STAssertTrue ( [qkMental isEqual:@"mental"
     ], @"");STAssertTrue ( [qkPhysicalNeg isEqual:@"physicalneg"
     ], @"");STAssertTrue ( [qkSocialNeg isEqual:@"socialneg"
     ], @"");STAssertTrue ( [qkMentalNeg isEqual:@"mentalneg"
     ], @"");STAssertTrue ( [qkPhysicalMax isEqual:@"physicalmax"
     ], @"");STAssertTrue ( [qkSocialMax isEqual:@"socialmax"
     ], @"");STAssertTrue ( [qkMentalMax isEqual:@"mentalmax"
     ], @"");STAssertTrue ( [qkAbilities isEqual:@"abilities"
     ], @"");STAssertTrue ( [qkInfluences isEqual:@"influences"
     ], @"");STAssertTrue ( [qkBackgrounds isEqual:@"backgrounds"
     ], @"");STAssertTrue ( [qkHealth isEqual:@"healthlevels"
     ], @"");STAssertTrue ( [qkMerits isEqual:@"merits"
     ], @"");STAssertTrue ( [qkFlaws isEqual:@"flaws"
     ], @"");STAssertTrue ( [qkEquipment isEqual:@"equipment"
     ], @"");STAssertTrue ( [qkLocations isEqual:@"locations"
     ], @"");STAssertTrue ( [qkOther isEqual:@"other"
     ], @"");STAssertTrue ( [qkBiography isEqual:@"biography"
     ], @"");STAssertTrue ( [qkRandom isEqual:@"random"
    
     ], @"");STAssertTrue ( [qkNotes isEqual:@"notes"
     ], @"");STAssertTrue ( [qkPlayer isEqual:@"player"
     ], @"");STAssertTrue ( [qkPlayStatus isEqual:@"playstatus"
     ], @"");STAssertTrue ( [qkID isEqual:@"id"
     ], @"");STAssertTrue ( [qkStartDate isEqual:@"startdate"
     ], @"");STAssertTrue ( [qkNarrator isEqual:@"narrator"
     ], @"");STAssertTrue ( [qkNPC isEqual:@"npc"
     ], @"");STAssertTrue ( [qkLastModified isEqual:@"lastmodified"
    
     ], @"");STAssertTrue ( [qkPPUnspent isEqual:@"ppunspent"
     ], @"");STAssertTrue ( [qkPPEarned isEqual:@"ppearned"
     ], @"");STAssertTrue ( [qkEMail isEqual:@"email"
     ], @"");STAssertTrue ( [qkPhone isEqual:@"phone"
     ], @"");STAssertTrue ( [qkAddress isEqual:@"address"
     ], @"");STAssertTrue ( [qkActive isEqual:@"active"
    
     ], @"");STAssertTrue ( [qkDisciplines isEqual:@"disciplines"
     ], @"");STAssertTrue ( [qkRank isEqual:@"rank"
     ], @"");STAssertTrue ( [qkRites isEqual:@"rites"
     ], @"");STAssertTrue ( [qkTitle isEqual:@"title"
     ], @"");STAssertTrue ( [qkBlood isEqual:@"blood"
     ], @"");STAssertTrue ( [qkTempBlood isEqual:@"tempblood"
     ], @"");STAssertTrue ( [qkConscience isEqual:@"conscience"
     ], @"");STAssertTrue ( [qkTempConscience isEqual:@"tempconscience"
     ], @"");STAssertTrue ( [qkSelfControl isEqual:@"selfcontrol"
     ], @"");STAssertTrue ( [qkTempSelfControl isEqual:@"tempselfcontrol"
     ], @"");STAssertTrue ( [qkCourage isEqual:@"courage"
     ], @"");STAssertTrue ( [qkTempCourage isEqual:@"tempcourage"
     ], @"");STAssertTrue ( [qkDerangements isEqual:@"derangements"
     ], @"");STAssertTrue ( [qkPowers isEqual:@"powers"
     ], @"");STAssertTrue ( [qkStatus isEqual:@"status"
     ], @"");STAssertTrue ( [qkHumanity isEqual:@"humanity"
     ], @"");STAssertTrue ( [qkRituals isEqual:@"rituals"
     ], @"");STAssertTrue ( [qkPathTraits isEqual:@"pathtraits"
     ], @"");STAssertTrue ( [qkTempPathTraits isEqual:@"temppathtraits"
     ], @"");STAssertTrue ( [qkFaction isEqual:@"faction"
    
     ], @"");STAssertTrue ( [qkSeelie isEqual:@"seelielegacy"
     ], @"");STAssertTrue ( [qkUnseelie isEqual:@"unseelielegacy"
     ], @"");STAssertTrue ( [qkKith isEqual:@"kith"
     ], @"");STAssertTrue ( [qkSeeming isEqual:@"seeming"
     ], @"");STAssertTrue ( [qkCourt isEqual:@"court"
     ], @"");STAssertTrue ( [qkHouse isEqual:@"house"
     ], @"");STAssertTrue ( [qkThreshold isEqual:@"threshold"
     ], @"");STAssertTrue ( [qkGlamour isEqual:@"glamour"
     ], @"");STAssertTrue ( [qkTempGlamour isEqual:@"tempglamour"
     ], @"");STAssertTrue ( [qkBanality isEqual:@"banality"
     ], @"");STAssertTrue ( [qkTempBanality isEqual:@"tempbanality"
     ], @"");STAssertTrue ( [qkArts isEqual:@"arts"
     ], @"");STAssertTrue ( [qkRealms isEqual:@"realms"
     ], @"");STAssertTrue ( [qkOaths isEqual:@"oaths"
    
     ], @"");STAssertTrue ( [qkTribe isEqual:@"tribe"
     ], @"");STAssertTrue ( [qkFera isEqual:@"fera"
     ], @"");STAssertTrue ( [qkBreed isEqual:@"breed"
     ], @"");STAssertTrue ( [qkAuspice isEqual:@"auspice"
     ], @"");STAssertTrue ( [qkPack isEqual:@"pack"
     ], @"");STAssertTrue ( [qkCamp isEqual:@"camp"
     ], @"");STAssertTrue ( [qkPosition isEqual:@"position"
     ], @"");STAssertTrue ( [qkNotoriety isEqual:@"notoriety"
     ], @"");STAssertTrue ( [qkTotem isEqual:@"totem"
     ], @"");STAssertTrue ( [qkHonor isEqual:@"honor"
     ], @"");STAssertTrue ( [qkGlory isEqual:@"glory"
     ], @"");STAssertTrue ( [qkWisdom isEqual:@"wisdom"
     ], @"");STAssertTrue ( [qkTempHonor isEqual:@"temphonor"
     ], @"");STAssertTrue ( [qkTempGlory isEqual:@"tempglory"
     ], @"");STAssertTrue ( [qkTempWisdom isEqual:@"tempwisdom"
     ], @"");STAssertTrue ( [qkRage isEqual:@"rage"
     ], @"");STAssertTrue ( [qkTempRage isEqual:@"temprage"
     ], @"");STAssertTrue ( [qkGnosis isEqual:@"gnosis"
     ], @"");STAssertTrue ( [qkTempGnosis isEqual:@"tempgnosis"
     ], @"");STAssertTrue ( [qkFeatures isEqual:@"features"
     ], @"");STAssertTrue ( [qkGifts isEqual:@"gifts"
     ], @"");STAssertTrue ( [qkHonorTraits isEqual:@"honortraits"
     ], @"");STAssertTrue ( [qkGloryTraits isEqual:@"glorytraits"
     ], @"");STAssertTrue ( [qkWisdomTraits isEqual:@"wisdomtraits"
    
     ], @"");STAssertTrue ( [qkDharma isEqual:@"dharma"
     ], @"");STAssertTrue ( [qkKJBalance isEqual:@"kjbalance"
     ], @"");STAssertTrue ( [qkDirection isEqual:@"direction"
     ], @"");STAssertTrue ( [qkStation isEqual:@"station"
     ], @"");STAssertTrue ( [qkPoArchetype isEqual:@"poarchetype"
     ], @"");STAssertTrue ( [qkHun isEqual:@"hun"
     ], @"");STAssertTrue ( [qkTempHun isEqual:@"temphun"
     ], @"");STAssertTrue ( [qkPo isEqual:@"po"
     ], @"");STAssertTrue ( [qkTempPo isEqual:@"temppo"
     ], @"");STAssertTrue ( [qkYin isEqual:@"yin"
     ], @"");STAssertTrue ( [qkTempYin isEqual:@"tempyin"
     ], @"");STAssertTrue ( [qkYang isEqual:@"yang"
     ], @"");STAssertTrue ( [qkTempYang isEqual:@"tempyang"
     ], @"");STAssertTrue ( [qkDemonChi isEqual:@"demonchi"
     ], @"");STAssertTrue ( [qkTempDemonChi isEqual:@"tempdemonchi"
     ], @"");STAssertTrue ( [qkGuanxi isEqual:@"guanxi"
    
     ], @"");STAssertTrue ( [qkEssence isEqual:@"essence"
     ], @"");STAssertTrue ( [qkTradition isEqual:@"tradition"
     ], @"");STAssertTrue ( [qkCabal isEqual:@"cabal"
     ], @"");STAssertTrue ( [qkArete isEqual:@"arete"
     ], @"");STAssertTrue ( [qkTempArete isEqual:@"temparete"
     ], @"");STAssertTrue ( [qkQuintessence isEqual:@"quintessence"
     ], @"");STAssertTrue ( [qkTempQuintessence isEqual:@"tempquintessence"
     ], @"");STAssertTrue ( [qkParadox isEqual:@"paradox"
     ], @"");STAssertTrue ( [qkTempParadox isEqual:@"tempparadox"
     ], @"");STAssertTrue ( [qkSpheres isEqual:@"spheres"
     ], @"");STAssertTrue ( [qkResonance isEqual:@"resonance"
     ], @"");STAssertTrue ( [qkReputation isEqual:@"reputation"
     ], @"");STAssertTrue ( [qkRotes isEqual:@"rotes"
     ], @"");STAssertTrue ( [qkFoci isEqual:@"foci"
    
     ], @"");STAssertTrue ( [qkMotivation isEqual:@"motivation"
     ], @"");STAssertTrue ( [qkRegnant isEqual:@"regnant"
     ], @"");STAssertTrue ( [qkAssociation isEqual:@"association"
     ], @"");STAssertTrue ( [qkTrueFaith isEqual:@"truefaith"
     ], @"");STAssertTrue ( [qkTempTrueFaith isEqual:@"temptruefaith"
    
     ], @"");STAssertTrue ( [qkAmenti isEqual:@"amenti"
     ], @"");STAssertTrue ( [qkMemory isEqual:@"memory"
     ], @"");STAssertTrue ( [qkTempMemory isEqual:@"tempmemory"
     ], @"");STAssertTrue ( [qkIntegrity isEqual:@"integrity"
     ], @"");STAssertTrue ( [qkTempIntegrity isEqual:@"tempintegrity"
     ], @"");STAssertTrue ( [qkJoy isEqual:@"joy"
     ], @"");STAssertTrue ( [qkTempJoy isEqual:@"tempjoy"
     ], @"");STAssertTrue ( [qkBa isEqual:@"ba"
     ], @"");STAssertTrue ( [qkTempBa isEqual:@"tempba"
     ], @"");STAssertTrue ( [qkKa isEqual:@"ka"
     ], @"");STAssertTrue ( [qkTempKa isEqual:@"tempka"
     ], @"");STAssertTrue ( [qkSekhem isEqual:@"sekhem"
     ], @"");STAssertTrue ( [qkTempSekhem isEqual:@"tempsekhem"
     ], @"");STAssertTrue ( [qkMBalance isEqual:@"mbalance"
     ], @"");STAssertTrue ( [qkTempMBalance isEqual:@"tempmbalance"
     ], @"");STAssertTrue ( [qkHekau isEqual:@"hekau"
     ], @"");STAssertTrue ( [qkSpells isEqual:@"spells"
     ], @"");STAssertTrue ( [qkInheritance isEqual:@"inheritance"
    
     ], @"");STAssertTrue ( [qkClan isEqual:@"clan"
     ], @"");STAssertTrue ( [qkSect isEqual:@"sect"
     ], @"");STAssertTrue ( [qkCoterie isEqual:@"coterie"
     ], @"");STAssertTrue ( [qkSire isEqual:@"sire"
     ], @"");STAssertTrue ( [qkAura isEqual:@"aura"
     ], @"");STAssertTrue ( [qkAuraBonus isEqual:@"aurabonus"
     ], @"");STAssertTrue ( [qkGeneration isEqual:@"generation"
     ], @"");STAssertTrue ( [qkPath isEqual:@"path"
     ], @"");STAssertTrue ( [qkBonds isEqual:@"bonds"
     ], @"");STAssertTrue ( [qkMiscellaneous isEqual:@"miscellaneous"
     ], @"");STAssertTrue ( [qkBoons isEqual:@"boons"
    
     ], @"");STAssertTrue ( [qkClass isEqual:@"class"
     ], @"");STAssertTrue ( [qkSubclass isEqual:@"subclass"
     ], @"");STAssertTrue ( [qkAffinity isEqual:@"affinity"
     ], @"");STAssertTrue ( [qkPlane isEqual:@"plane"
     ], @"");STAssertTrue ( [qkBrood isEqual:@"brood"
     ], @"");STAssertTrue ( [qkTempers isEqual:@"tempers"
    
     ], @"");STAssertTrue ( [qkEthnos isEqual:@"ethnos"
     ], @"");STAssertTrue ( [qkGuild isEqual:@"guild"
     ], @"");STAssertTrue ( [qkLegion isEqual:@"legion"
     ], @"");STAssertTrue ( [qkPathos isEqual:@"pathos"
     ], @"");STAssertTrue ( [qkTempPathos isEqual:@"temppathos"
     ], @"");STAssertTrue ( [qkCorpus isEqual:@"corpus"
     ], @"");STAssertTrue ( [qkTempCorpus isEqual:@"tempcorpus"
     ], @"");STAssertTrue ( [qkArcanoi isEqual:@"arcanoi"
     ], @"");STAssertTrue ( [qkPassions isEqual:@"passions"
     ], @"");STAssertTrue ( [qkFetters isEqual:@"fetters"
     ], @"");STAssertTrue ( [qkLife isEqual:@"life"
     ], @"");STAssertTrue ( [qkDeath isEqual:@"death"
     ], @"");STAssertTrue ( [qkHaunt isEqual:@"haunt"
     ], @"");STAssertTrue ( [qkRegret isEqual:@"regret"
     ], @"");STAssertTrue ( [qkShadowArchetype isEqual:@"shadowarchetype"
     ], @"");STAssertTrue ( [qkShadowPlayer isEqual:@"shadowplayer"
     ], @"");STAssertTrue ( [qkAngst isEqual:@"angst"
     ], @"");STAssertTrue ( [qkTempAngst isEqual:@"tempangst"
     ], @"");STAssertTrue ( [qkDarkPassions isEqual:@"darkpassions"
     ], @"");STAssertTrue ( [qkThorns isEqual:@"thorns"
    
     ], @"");STAssertTrue ( [qkType isEqual:@"type"
     ], @"");STAssertTrue ( [qkSubtype isEqual:@"subtype"
     ], @"");STAssertTrue ( [qkLevel isEqual:@"level"
     ], @"");STAssertTrue ( [qkConcealability isEqual:@"conceal"
     ], @"");STAssertTrue ( [qkAvailability isEqual:@"availability"
     ], @"");STAssertTrue ( [qkNegatives isEqual:@"negatives"
     ], @"");STAssertTrue ( [qkDamageType isEqual:@"damagetype"
     ], @"");STAssertTrue ( [qkDamageAmount isEqual:@"damageamount"
     ], @"");STAssertTrue ( [qkBonus isEqual:@"bonus"
     ], @"");STAssertTrue ( [qkAppearance isEqual:@"appearance"
    
     ], @"");STAssertTrue ( [qkDescription isEqual:@"description"
     ], @"");STAssertTrue ( [qkGrades isEqual:@"grades"
     ], @"");STAssertTrue ( [qkDuration isEqual:@"duration"
    
     ], @"");STAssertTrue ( [qkOwner isEqual:@"owner"
     ], @"");STAssertTrue ( [qkWhere isEqual:@"where"
     ], @"");STAssertTrue ( [qkAccess isEqual:@"access"
     ], @"");STAssertTrue ( [qkLinks isEqual:@"links"
     ], @"");STAssertTrue ( [qkSecurity isEqual:@"security"
     ], @"");STAssertTrue ( [qkSecTraits isEqual:@"securitytraits"
     ], @"");STAssertTrue ( [qkSecRetests isEqual:@"securityretests"
     ], @"");STAssertTrue ( [qkGauntlet isEqual:@"gauntlet"
     ], @"");STAssertTrue ( [qkUmbra isEqual:@"umbra"
    
     ], @"");STAssertTrue ( [qkCreed isEqual:@"creed"
     ], @"");STAssertTrue ( [qkHandle isEqual:@"handle"
     ], @"");STAssertTrue ( [qkConviction isEqual:@"conviction"
     ], @"");STAssertTrue ( [qkTempConviction isEqual:@"tempconviction"
     ], @"");STAssertTrue ( [qkMercy isEqual:@"mercy"
     ], @"");STAssertTrue ( [qkTempMercy isEqual:@"tempmercy"
     ], @"");STAssertTrue ( [qkVision isEqual:@"vision"
     ], @"");STAssertTrue ( [qkTempVision isEqual:@"tempvision"
     ], @"");STAssertTrue ( [qkZeal isEqual:@"zeal"
     ], @"");STAssertTrue ( [qkTempZeal isEqual:@"tempzeal"
     ], @"");STAssertTrue ( [qkEdges isEqual:@"edges"
    
     ], @"");STAssertTrue ( [qkTorment isEqual:@"torment"
     ], @"");STAssertTrue ( [qkTempTorment isEqual:@"temptorment"
     ], @"");STAssertTrue ( [qkFaith isEqual:@"faith"
     ], @"");STAssertTrue ( [qkTempFaith isEqual:@"tempfaith"
     ], @"");STAssertTrue ( [qkLores isEqual:@"lores"
     ], @"");STAssertTrue ( [qkVisage isEqual:@"apocalypticform"
    
     ], @"");STAssertTrue ( [qkCount isEqual:@"count"
     ], @"");STAssertTrue ( [qkNote isEqual:@"note"
     ], @"");STAssertTrue ( [qkHistory isEqual:@"history"
     ], @"");STAssertTrue ( [qkDate isEqual:@"date"
     ], @"");STAssertTrue ( [qkChange isEqual:@"change"
     ], @"");STAssertTrue ( [qkChangeText isEqual:@"changetext"
     ], @"");STAssertTrue ( [qkReason isEqual:@"reason"
     ], @"");STAssertTrue ( [qkUnspent isEqual:@"unspent"
     ], @"");STAssertTrue ( [qkEarned isEqual:@"earned"
     ], @"");STAssertTrue ( [qkValue isEqual:@"value"
     ], @"");STAssertTrue ( [qkAction isEqual:@"action"
     ], @"");STAssertTrue ( [qkTotal isEqual:@"total"
     ], @"");STAssertTrue ( [qkUnused isEqual:@"unused"
     ], @"");STAssertTrue ( [qkGrowth isEqual:@"growth"
     ], @"");STAssertTrue ( [qkResult isEqual:@"result"
     ], @"");STAssertTrue ( [qkEndDate isEqual:@"enddate"
     ], @"");STAssertTrue ( [qkOutline isEqual:@"outline"
     ], @"");STAssertTrue ( [qkKeyCharacters isEqual:@"keycharacters"
     ], @"");STAssertTrue ( [qkDevDate isEqual:@"devdate"
     ], @"");STAssertTrue ( [qkDevelopment isEqual:@"development"
     ], @"");STAssertTrue ( [qkRumor isEqual:@"rumor"
    
     ], @"");STAssertTrue ( [qkWebSite isEqual:@"website"
     ], @"");STAssertTrue ( [qkUsualPlace isEqual:@"usualplace"
     ], @"");STAssertTrue ( [qkUsualTime isEqual:@"usualtime"
     ], @"");STAssertTrue ( [qkPlace isEqual:@"place"
     ], @"");STAssertTrue ( [qkTime isEqual:@"time"
     ], @"");STAssertTrue ( [qkNextGame isEqual:@"nextgame"
     ], @"");STAssertTrue ( [qkNextPlace isEqual:@"nextplace"
     ], @"");STAssertTrue ( [qkNextTime isEqual:@"nexttime"
     ], @"");STAssertTrue ( [qkNextNotes isEqual:@"nextnotes"
    
     ], @"");STAssertTrue ( [qkOwed isEqual:@"owed"
     ], @"");STAssertTrue ( [qkPartner isEqual:@"partner"
    
     ], @"");STAssertTrue ( [qkDefault isEqual:@""], @""     );

}
@end
